<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>power_one_hurtbox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///STATS

//Standard
data = 5;
state = 0;
combo = 0;
trig_ch = 0;
trig_ps = -1;
trig_bk = 0;
hit_sty = 0;
hlag = 0;
brek = 0;
abox = ds_list_create();

//Gravity
grav = 0.6;//Constant gravity
gvy = 0;//Variable added gravity
gvydam = 0;//Damage induced gravity

//Jumping
jlag = 3;//Constant jump wait (ground to air)
plag = -1;//Variable jump prepare counter
djmp = 1;//Double jump
grounded = 1;//Ground state
lifted = 0;//Ground attack that goes aerial
airborne = 0;//Neutral air state after action
ffall = 0;//Down dashable air attack
walled = 0;//Against wall state

//Buffer
buffer_mtr = 60;//Allows performing
buffer_ch = 0;//may be useless
buffer_bk = 15;//Stores arrow inputs
buffer_af = 0;//Keeps track of frame advancement

//Resources
life = 10000;//10000;
will = 2000;
shield = 400;
goo = 1;
bar = 5000;
boost = 100;
charge = 0;
stock = 3;//3
ailment = 0;

//Skills
power_pri = 8;
power_sec = 9;
power_cor = 1;
defense_pri = 6;
defense_sec = 5;
defense_cor = 2;
speed_pri = 7;
speed_sec = 5;
speed_cor = 1;
stamina_pri = 3;
stamina_sec = 7;
stamina_cor = 1;

//Movement
walk_sp[4] = 3;//F walk
walk_sp[5] = 15//6;//F dash
walk_sp[7] = 5;//B walk
walk_sp[8] = 15//6;//B dash
walk_sp[17] = 2;//F jump
walk_sp[19] = 10;//FA dash
walk_sp[20] = 2;//B jump
walk_sp[22] = 10;//BA dash
walk_sp[23] = 12;//Jump
walk_sp[24] = 1;//F flip
walk_sp[25] = 1;//B flip
walk_sp[27] = 10;//D dash
walk_sp[28] = 4;//F hop
walk_sp[29] = 4;//B hop
walk_sp[30] = 5;//Hop
walk_sp[57] = 4;//F tech
walk_sp[58] = 4;//B tech
walk_sp[60] = 4;//FA tech
walk_sp[61] = 4;//BA tech
charge_for = walk_sp[4];
charge_bck = walk_sp[7];

//Dashing
dash = 0;
dasl[5] = 20//10;//F len
dasl[8] = 20//5;//B len
dasl[19] = 2;//FA len
dasl[22] = 2;//BA len
dasl[27] = 2;//D len
dast = 0;//Dash trigger
dasc = 13+2;//Dash counter
dask = 0;//Dash breaking

//Attacking
action[64,4] = 1;//sW
action[64,0] = 6;//Startup
action[64,1] = 3;//Active
action[64,2] = 13;//Recovery
action[64,3] = 0;//Lingering
damage[64,0] = 40*power_cor;//Damage
damage[64,1] = 10;//Hitstun
damage[64,2] = 1;//Hitlag
blocks[64,0] = 0.1;//Break
blocks[64,1] = 30;//Blockstun
blocks[64,2] = 1;//Pushback

action[65,0] = 4;
action[65,1] = 6;
action[65,2] = 12;
action[65,3] = 0;
damage[65,0] = 20*power_cor;
damage[65,1] = 30;
damage[65,2] = 1;
blocks[65,0] = 0.1;
blocks[65,1] = 30;
blocks[65,2] = 1;

action[66,0] = 12;
action[66,1] = 2;
action[66,2] = 3;
action[66,3] = 0;
damage[66,0] = 60*power_cor;
damage[66,1] = 190;
damage[66,2] = 1;
blocks[66,0] = 0.1;
blocks[66,1] = 30;
blocks[66,2] = 1;

action[72,4] = 1;//sS
action[72,0] = 20;
action[72,1] = 2;
action[72,2] = 8;
action[72,3] = 0;
damage[72,0] = 100*power_cor;
damage[72,1] = 30;
damage[72,2] = 10;
blocks[72,0] = 0.2;
blocks[72,1] = 20;
blocks[72,2] = 15;

action[80,4] = 1;//tW
action[80,0] = 15;
action[80,1] = 5;
action[80,2] = 15;
action[80,3] = 0;
damage[80,0] = 30*power_cor;
damage[80,1] = 20;
damage[80,2] = 1;
blocks[80,0] = 0.1;
blocks[80,1] = 5;
blocks[80,2] = 1;

action[88,4] = 1;//tS
action[88,0] = 20;
action[88,1] = 2;
action[88,2] = 5;
action[88,3] = 0;
damage[88,0] = 80*power_cor;
damage[88,1] = 10;
damage[88,2] = 2;
blocks[88,0] = 0.1;
blocks[88,1] = 8;
blocks[88,2] = 1;

action[89,0] = 5;
action[89,1] = 15;
action[89,2] = 5;
action[89,3] = 0;
damage[89,0] = 50*power_cor;
damage[89,1] = 9;
damage[89,2] = 2;
blocks[89,0] = 0.5;
blocks[89,1] = 20;
blocks[89,2] = 8;

action[96,4] = 1;//rW
action[96,0] = 5;
action[96,1] = 10;
action[96,2] = 10;
action[96,3] = 0;
damage[96,0] = 30*power_cor;
damage[96,1] = 1;
damage[96,2] = 1;
blocks[96,0] = 0.1;
blocks[96,1] = 5;
blocks[96,2] = 2;

for (var i=0;i&lt;2;i++)
{
    action[104+i,4] = 1;//rS
    action[104+i,0] = 15;
    action[104+i,1] = 11;
    action[104+i,2] = 5;
    action[104+i,3] = 0;
    damage[104+i,0] = 20*power_cor;
    damage[104+i,1] = 15;
    damage[104+i,2] = 1;
    blocks[104+i,0] = 0.1;
    blocks[104+i,1] = 30;
    blocks[104+i,2] = 1;
}

action[112,4] = 1;//cW
action[112,0] = 5;
action[112,1] = 10;
action[112,2] = 5;
action[112,3] = 0;
damage[112,0] = 100*power_cor;
damage[112,1] = 5;
damage[112,2] = 3;
blocks[112,0] = 0.1;
blocks[112,1] = 30;
blocks[112,2] = 1;

action[120,4] = 1;//cS
action[120,0] = 5;
action[120,1] = 10;
action[120,2] = 5;
action[120,3] = 0;
damage[120,0] = 100*power_cor;
damage[120,1] = 5;
damage[120,2] = 3;
blocks[120,0] = 0.1;
blocks[120,1] = 30;
blocks[120,2] = 1;

action[121,0] = 5;
action[121,1] = 10;
action[121,2] = 5;
action[121,3] = 0;
damage[121,0] = 5*power_cor;
damage[121,1] = 5;
damage[121,2] = 3;
blocks[121,0] = 0.1;
blocks[121,1] = 30;
blocks[121,2] = 1;

action[122,0] = 5;
action[122,1] = 10;
action[122,2] = 5;
action[122,3] = 0;
damage[122,0] = 5*power_cor;
damage[122,1] = 5;
damage[122,2] = 3;
blocks[122,0] = 0.1;
blocks[122,1] = 30;
blocks[122,2] = 1;

action[123,0] = 5;
action[123,1] = 10;
action[123,2] = 5;
action[123,3] = 0;
damage[123,0] = 5*power_cor;
damage[123,1] = 5;
damage[123,2] = 3;
blocks[123,0] = 0.1;
blocks[123,1] = 30;
blocks[123,2] = 1;

action[124,0] = 5;
action[124,1] = 10;
action[124,2] = 5;
action[124,3] = 0;
damage[124,0] = 5*power_cor;
damage[124,1] = 5;
damage[124,2] = 3;
blocks[124,0] = 0.1;
blocks[124,1] = 30;
blocks[124,2] = 1;

action[128,4] = 1;//uW
action[128,0] = 5;
action[128,1] = 10;
action[128,2] = 5;
action[128,3] = 0;
damage[128,0] = 100*power_cor;
damage[128,1] = 5;
damage[128,2] = 3;
blocks[128,0] = 0.1;
blocks[128,1] = 30;
blocks[128,2] = 1;

action[136,4] = 1;//uS
action[136,0] = 5;
action[136,1] = 10;
action[136,2] = 5;
action[136,3] = 0;
damage[136,0] = 100*power_cor;
damage[136,1] = 5;
damage[136,2] = 3;
blocks[136,0] = 0.1;
blocks[136,1] = 30;
blocks[136,2] = 1;

action[144,4] = 1;//nW
action[144,0] = 6;
action[144,1] = 3;
action[144,2] = 13;
action[144,3] = 0;
damage[144,0] = 40*power_cor;
damage[144,1] = 10;
damage[144,2] = 3;
blocks[144,0] = 0.1;
blocks[144,1] = 30;
blocks[144,2] = 1;

action[152,4] = 1;//nS
action[152,0] = 6;
action[152,1] = 3;
action[152,2] = 13;
action[152,3] = 0;
damage[152,0] = 40*power_cor;
damage[152,1] = 10;
damage[152,2] = 3;
blocks[152,0] = 0.1;
blocks[152,1] = 30;
blocks[152,2] = 1;

action[160,4] = 1;//fW
action[160,0] = 6;
action[160,1] = 3;
action[160,2] = 13;
action[160,3] = 0;
damage[160,0] = 40*power_cor;
damage[160,1] = 10;
damage[160,2] = 3;
blocks[160,0] = 0.1;
blocks[160,1] = 30;
blocks[160,2] = 1;

action[168,4] = 1;//fS
action[168,0] = 6;
action[168,1] = 3;
action[168,2] = 13;
action[168,3] = 0;
damage[168,0] = 40*power_cor;
damage[168,1] = 10;
damage[168,2] = 3;
blocks[168,0] = 0.1;
blocks[168,1] = 30;
blocks[168,2] = 1;

action[176,4] = 1;//dW
action[176,0] = 6;
action[176,1] = 3;
action[176,2] = 13;
action[176,3] = 0;
damage[176,0] = 40*power_cor;
damage[176,1] = 10;
damage[176,2] = 3;
blocks[176,0] = 0.1;
blocks[176,1] = 30;
blocks[176,2] = 1;

action[184,4] = 1;//dS
action[184,0] = 6;
action[184,1] = 3;
action[184,2] = 13;
action[184,3] = 0;
damage[184,0] = 40*power_cor;
damage[184,1] = 10;
damage[184,2] = 3;
blocks[184,0] = 0.1;
blocks[184,1] = 30;
blocks[184,2] = 1;

action[192,4] = 1;//nB
action[192,0] = 6;
action[192,1] = 1;
action[192,2] = 13;
action[192,3] = 90;
damage[192,0] = 100*power_cor;
damage[192,1] = 50;
damage[192,2] = 1;
blocks[192,0] = 0.1;
blocks[192,1] = 30;
blocks[192,2] = 1;

//Shaders
anim = scr_load_animation("./ch_test2.bao",true);
anim_l[0] = room_speed*1;
anim_s[0] = -1;
shader_ambientColor = shader_get_uniform(sh_blend,"uAmbientColor");
shader_lightDirection = shader_get_uniform(sh_blend,"uLightingDirection");
shader_lightDirectionalColor = shader_get_uniform(sh_blend,"uDirectionalColor");
shader_worldMatTranspInv = shader_get_uniform(sh_blend,"uMatWorldTransInv");
z = -5;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///COMBAT

//animate
anim_s[0] += 1;
if anim_s[0] &gt;= anim_l[0]
    anim_s[0] = 0;

BASIC_SET();
//anim[0].x += hspeed;
//anim[0].y += vspeed;

var nbox;
nbox[1] = 0;
if ds_list_size(abox)
for (var i=ds_list_size(abox)-1;i&gt;=0;i--)
{
    cbox = abox[|i];
    hbox = cbox[0];
    move = cbox[1];
    frame = cbox[2];
    buffer_af = cbox[3];
    s_part = cbox[8];
    t_part = cbox[9];
    hfirm = cbox[10];
    //var nbox;
    //nbox[1] = move;
    
    switch move
    {
        case 64:    switch frame//sW
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 1 * (forward-5);
                                    hbox.hspeed = 1 * (forward-5);
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (38&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                        hfirm = 1;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 60 * (forward-5);
                                    hty = (bbox_bottom - bbox_top) * 0.7;
                                    hzx = 25;
                                    hzy = 35;
                                    frame++;
                    }
                    if hfirm and (attack==2)
                    {
                        frame = 3;
                        nbox[1] = move + 1;
                    }
                    break;
                    ////
        case 65:    switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 5 * (forward-5);
                                    hbox.hspeed = 5 * (forward-5);
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (39&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    //if !(hbox.hit)
                                        hfirm = 1;
                                    break;
                        case 4:     break;
                        default:    htx = 60 * (forward-5);
                                    hty = (bbox_bottom - bbox_top) * 0.5;
                                    hzx = 35;
                                    hzy = 80;
                                    frame++;
                    }
                    if hfirm and (attack==2)
                    {
                        nbox[1] = move + 1;
                    }
                    break;
                    ////
        case 66:    switch frame
                    {
                        case 1:     hspeed = 0.1 * (backward-5);
                                    break;
                        case 2:     hspeed = 3 * (forward-5);
                                    hbox.hspeed = 3 * (forward-5);
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (47&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 4 * (forward-5);
                                        oppose.vsphit = -4;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0.2;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 60 * (forward-5);
                                    hty = (bbox_bottom - bbox_top) * 0.5;
                                    hzx = 30;
                                    hzy = 10;
                                    frame++;
                    }
                    break;
                    
        case 72:    switch frame//sS
                    {
                        case 1:     hspeed = 0.5 * (backward-5);
                                    break;
                        case 2:     hspeed = 1 * (forward-5);
                                    hbox.hspeed = 0;
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (49&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 30 * (forward-5);
                                        oppose.vsphit = -15;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0.8;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 80:    switch frame//tW
                    {
                        case 1:     if !s_part
                                    {
                                        hspeed = 0;
                                        t_part++;
                                        if t_part==10
                                        {
                                            s_part++;
                                            //t_part = 0;
                                        }
                                    }
                                    else
                                        hspeed = 10 * (forward-5);
                                    break;
                        case 2:     hspeed = 5 * (forward-5);
                                    hbox.hspeed = 0;
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (38&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                    }
                                    break;
                        case 3:     hspeed = 2 * (forward-5);
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                                    //s_part = 0;
                                    //t_part = 0;
                    }
                    break;
                    
        case 88:    switch frame//tS
                    {
                        case 1:     if !s_part
                                    {
                                        hspeed = 5 * (backward-5);
                                        t_part++;
                                        if t_part==5
                                        {
                                            s_part++;
                                            //t_part = 0;
                                        }
                                    }
                                    else
                                        hspeed = 15 * (forward-5);
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 0;
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (38&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 1 * (forward-5);
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                        hfirm = 1;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                                    //s_part = 0;
                                    //t_part = 0;
                    }
                    if hfirm and (attack==3)
                    {
                        frame = 3;
                        nbox[1] = move + 1;
                        //s_part = 0;
                        //t_part = 0;
                    }
                    break;
                    ////
        case 89:    switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 0;
                                    if !s_part
                                    {
                                        if instance_exists(hbox) and hbox.hit and
                                        collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                            oppose,true,true)
                                        {
                                            hbox.hit = 0;
                                            hit_sty = (39&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                            oppose.htate = move;
                                            oppose.hsphit = 0;
                                            oppose.vsphit = 0;
                                            oppose.hspdam = 0;
                                            oppose.vspdam = 0;
                                            oppose.gvydam = 0;
                                        }
                                        t_part++;
                                        if t_part==5
                                        {
                                            cbox[3] = 0;
                                            nbox[0] = -1;
                                            nbox[1] = move;
                                            nbox[2] = 1;
                                            nbox[3] = 0;
                                            nbox[4] = 100 * (forward-5);
                                            nbox[5] = sprite_height/2;
                                            nbox[6] = 60;
                                            nbox[7] = 60;
                                            nbox[8] = s_part + 1;
                                            nbox[9] = t_part;
                                            nbox[10] = 0;
                                            ds_list_add(abox,nbox);
                                            hbox.hit = 0;
                                            //s_part++;
                                            //t_part = 0;
                                        }
                                    }
                                    else
                                    {
                                        if instance_exists(hbox) and hbox.hit and
                                        collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                            oppose,true,true)
                                        {
                                            hbox.hit = 0;
                                            hit_sty = (45&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                            oppose.htate = move;
                                            oppose.hsphit = 0;
                                            oppose.vsphit = 0;
                                            oppose.hspdam = 0;
                                            oppose.vspdam = 0;
                                            oppose.gvydam = 4;
                                        }
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                                    //s_part = 0;
                                    //t_part = 0;
                    }
                    break;
                    
        case 96:    switch frame//rW
                    {
                        case 1:     if state==5
                                        hspeed = walk_sp[state] * (forward-5);
                                    else
                                        hspeed = 0;
                                    break;
                        case 2:     hspeed = 1.1 * walk_sp[state] * (forward-5);
                                    vspeed = -1;
                                    hbox.hspeed = 1.1 * walk_sp[state] * (forward-5);
                                    hbox.vspeed = -1;
                                    heldlr = 1;
                                    lifted = 1;
                                    gvy = 0;
                                    if hfirm
                                    {
                                        buffer_mtr += buffer_af
                                        buffer_af = 0;
                                    }
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (47&lt;&lt;5) + (1&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 1.2 * walk_sp[state] * (forward-5);
                                        oppose.vsphit = -2;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = -3;
                                        oppose.gvydam = 0.2;
                                        hfirm = 1;
                                    }
                                    break;
                        case 3:     if hfirm
                                    {
                                        if (arrow==forward+3) or (arrow==forward-3)
                                        or (arrow==forward)
                                            hspeed = 1.1 * walk_sp[state] * (forward-5);
                                        else if (arrow==backward+3) or (arrow==backward-3)
                                        or (arrow==backward)
                                            hspeed = 1.1 * walk_sp[state] * (backward-5);
                                        else
                                            hspeed = 0;
                                        vspeed = -10 + gvy;
                                        if buffer_mtr&gt;=59
                                        {
                                            state = 23;
                                            airborne = 1;
                                        }
                                    }
                                    else
                                    {
                                        if grounded
                                            state = 9;
                                        else
                                        {
                                            hspeed = 1.1 * walk_sp[state] * (forward-5);
                                            vspeed += grav;
                                        }
                                    }
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 104:   switch frame//rS
                    {
                        case 1:     hspeed = walk_sp[state] * (forward-5);
                                    break;
                        case 2:     hspeed = 0.4 * walk_sp[state] * (forward-5);
                                    hbox.hspeed = 2 * (forward-5);
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (38&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move + hfirm;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                        hfirm = 1;
                                        if s_part==3
                                        {
                                            hit_sty = (48&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                            oppose.hsphit = 2 * (forward-5);
                                            oppose.vsphit = -2;
                                            oppose.gvydam = 0.2;
                                        }
                                    }
                                    t_part++;
                                    if !(t_part%3) and (t_part==(s_part+1)*3)
                                    and (s_part&lt;3)
                                    {
                                        cbox[3] = 0;
                                        nbox[0] = -1;
                                        nbox[1] = move;
                                        nbox[2] = 1;
                                        nbox[3] = 0;
                                        nbox[4] = 100 * (forward-5);
                                        nbox[5] = sprite_height/2;
                                        nbox[6] = 60;
                                        nbox[7] = 60;
                                        nbox[8] = s_part + 1;
                                        nbox[9] = t_part;
                                        nbox[10] = hfirm;
                                        ds_list_add(abox,nbox);
                                        hbox.hit = 0;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = 100 * (forward-5);
                                    hty = sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 112:   switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 2 * (forward-5);
                                    if instance_exists(hbox) and 
                                       collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                           oppose,true,true)
                                    {
                                        with hbox instance_destroy();
                                        combo++;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = x + (100 * (forward-5));
                                    hty = y - sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 120:   switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 2 * (forward-5);
                                    if instance_exists(hbox) and 
                                       collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                           oppose,true,true)
                                    {
                                        with hbox instance_destroy();
                                        combo++;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = x + (100 * (forward-5));
                                    hty = y - sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 128:   switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 2 * (forward-5);
                                    if instance_exists(hbox) and 
                                       collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                           oppose,true,true)
                                    {
                                        with hbox instance_destroy();
                                        combo++;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = x + (100 * (forward-5));
                                    hty = y - sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 136:   switch frame
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 2 * (forward-5);
                                    if instance_exists(hbox) and 
                                       collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                           oppose,true,true)
                                    {
                                        with hbox instance_destroy();
                                        combo++;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    break;
                        case 4:     break;
                        default:    htx = x + (100 * (forward-5));
                                    hty = y - sprite_height/2;
                                    hzx = 60;
                                    hzy = 60;
                                    frame++;
                    }
                    break;
                    
        case 144:   vspeed = -walk_sp[23+6*(state&gt;=28)] + gvy;
                    switch frame//nW
                    {
                        case 1:     ffall = 1;
                                    break;
                        case 2:     hbox.hspeed = hspeed;
                                    hbox.vspeed = vspeed;
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (38&lt;&lt;5) + (0&lt;&lt;3) + 4;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = 0;
                                        oppose.hspdam = 0;
                                        oppose.vspdam = 0;
                                        oppose.gvydam = 0;
                                    }
                                    break;
                        case 3:     if buffer_mtr&gt;=59
                                    {
                                        state = 23;
                                        airborne = 1;
                                        ffall = 0;
                                    }
                                    break;
                        case 4:     break;
                        default:    htx = 0;
                                    hty = sprite_height/2;
                                    hzx = 100;
                                    hzy = 100;
                                    frame++;
                    }
                    if grounded
                    {
                        buffer_mtr = 59;
                        buffer_af = 0;
                        state = 9;
                        ffall = 0;
                        switch frame
                        {
                            case 2: with hbox instance_destroy();
                            case 3: //
                            case 4: //
                            case 5: //
                            case 6: //
                            case 1: frame = 6;
                                    break;
                        }
                    }
                    break;
                    
        case 192:   switch frame//nB
                    {
                        case 1:     hspeed = 0;
                                    break;
                        case 2:     hspeed = 0;
                                    hbox.hspeed = 6 * (forward-5);
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (48&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = -4;
                                        oppose.gvydam = 0.2;
                                    }
                                    break;
                        case 3:     hspeed = 0;
                                    if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (48&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = -4;
                                        oppose.gvydam = 0.2;
                                    }
                                    break;
                        case 4:     if instance_exists(hbox) and hbox.hit and
                                    collision_rectangle(hbox.x,hbox.y,hbox.bx,hbox.by,
                                                        oppose,true,true)
                                    {
                                        hbox.hit = 0;
                                        hit_sty = (48&lt;&lt;5) + (0&lt;&lt;3) + 3;
                                        oppose.htate = move;
                                        oppose.hsphit = 0;
                                        oppose.vsphit = -4;
                                        oppose.gvydam = 0.2;
                                    }
                                    break;
                        default:    htx = 60 * (forward-5);
                                    hty = (bbox_bottom - bbox_top) * 0.7;
                                    hzx = 40;
                                    hzy = 40;
                                    frame++;
                    }
                    break;
    }
    
    //if (move!=nbox[1]) and !nbox[1]
    if nbox[1] == move + 1
    {
        buffer_mtr = 58;
        hfirm = 0;
        buffer_af = 0;
        nbox[0] = -1;
        //for(var j=11;j&gt;2;j--)
          //  nbox[j-1] = 0;
        for(var j=10;j&gt;2;j--)
            nbox[j] = 0;
        ds_list_add(abox,nbox);
    }
    if frame==6
    {
        cbox = 0;
        ds_list_delete(abox,i);
    }
    else
    {
        cbox[2] = frame;
        cbox[3] = buffer_af;
        cbox[4] = htx;
        cbox[5] = hty;
        cbox[6] = hzx;
        cbox[7] = hzy;
        cbox[8] = s_part;
        cbox[9] = t_part;
        cbox[10] = hfirm;
    }
}

//Break chdecking
if dask
{
    hspeed = dask;
    vspeed = 0;
    lifted = 0;
}

//Wall checking
if walled
{
    if hspeed*(walled-2)&lt;=0
        hspeed = 0;
    else
        x += (walled-2);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MODEL

draw_self();
//draw_set_color(c_white);
texture_set_repeat(true);
shader_set(sh_blend);
shader_set_uniform_f(shader_ambientColor,0.3,0.3,0.3);
shader_set_uniform_f(shader_lightDirection,0.5,-0.5,0.5);
shader_set_uniform_f(shader_lightDirectionalColor,1,1,1);

d3d_transform_set_identity();
d3d_transform_add_scaling(20,20,20);
d3d_transform_add_rotation_x(270);
d3d_transform_add_translation(x,y-64,z);

var worldMat = scr_TranspoInverse(matrix_get(matrix_world));
shader_set_uniform_f_array(shader_worldMatTranspInv,worldMat);
scr_draw_animation_frame(anim,anim_s[0],anim_l[0],background_get_texture(skin));
d3d_transform_set_identity();
shader_reset();
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
