<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>actor_set</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROL SETTINGS

show_debug_overlay(true);
ini_open("controller.ini");

//Player 1
gp_pause[1] = ini_read_real("control_p1","pause",0);
gp_up[1] = ini_read_real("control_p1","up",0);
gp_down[1] = ini_read_real("control_p1","down",0);
gp_left[1] = ini_read_real("control_p1","left",0);
gp_right[1] = ini_read_real("control_p1","right",0);
gp_special[1] = ini_read_real("control_p1","special",0);
gp_weak[1] = ini_read_real("control_p1","weak",0);
gp_strong[1] = ini_read_real("control_p1","strong",0);
gp_jump[1] = ini_read_real("control_p1","jump",0);
gp_shield[1] = ini_read_real("control_p1","shield",0);
gp_charge[1] = ini_read_real("control_p1","charge",0);
gp_debug = gp_select;

//Player 2
gp_pause[2] = ini_read_real("control_p2","pause",0);
gp_up[2] = ini_read_real("control_p2","up",0);
gp_down[2] = ini_read_real("control_p2","down",0);
gp_left[2] = ini_read_real("control_p2","left",0);
gp_right[2] = ini_read_real("control_p2","right",0);
gp_special[2] = ini_read_real("control_p2","special",0);
gp_weak[2] = ini_read_real("control_p2","weak",0);
gp_strong[2] = ini_read_real("control_p2","strong",0);
gp_jump[2] = ini_read_real("control_p2","jump",0);
gp_shield[2] = ini_read_real("control_p2","shield",0);
gp_charge[2] = ini_read_real("control_p2","charge",0);
ini_close();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROLLER

//Player 2 is stored first, then shifted with Player 1 stored last
data = 0;
var p = 2;
repeat 2
{
    if gamepad_is_connected(p-1)//Gamepad controls
    {
        //Pause
        if gamepad_button_check(p-1,gp_pause[p])
            p_button = 1;
        else
            p_button = 0;
        
        //Keypad movement mapping
        m_button = 5 + (gamepad_button_check(p-1,gp_right[p]) - gamepad_button_check(p-1,gp_left[p]))
                 + 3 * (gamepad_button_check(p-1,gp_up[p]) - gamepad_button_check(p-1,gp_down[p]));
        
        if gamepad_button_check(p-1,gp_special[p])
            a_button = 1;//Special
        else if gamepad_button_check(p-1,gp_weak[p])
            a_button = 2;//Weak
        else if gamepad_button_check(p-1,gp_strong[p])
            a_button = 3;//Strong
        else if gamepad_button_check(p-1,gp_jump[p])
            a_button = 4;//Jump
        else
            a_button = 0;
        
        if gamepad_button_check(p-1,gp_shield[p])
            h_button = 1;//Shield
        else if gamepad_button_check(p-1,gp_charge[p])
            h_button = 2;//Charge
        else
            h_button = 0;
            
        //Player 1 debug select
        if gamepad_button_check_pressed(0,gp_debug) and instance_exists(stager)
            stager.debugg = 1 - stager.debugg;
    }
    ////
    else//Keyboard controls
    {
        //Pause
        if keyboard_check(gp_pause[p])
            p_button = 1;
        else
            p_button = 0;
        
        //Keypad movement mapping
        m_button = 5 + (keyboard_check(gp_right[p]) - keyboard_check(gp_left[p]))
                 + 3 * (keyboard_check(gp_up[p]) - keyboard_check(gp_down[p]));
        
        if keyboard_check(gp_special[p])
            a_button = 1;//Special
        else if keyboard_check(gp_weak[p])
            a_button = 2;//Weak
        else if keyboard_check(gp_strong[p])
            a_button = 3;//Strong
        else if keyboard_check(gp_jump[p])
            a_button = 4;//Jump
        else
            a_button = 0;
        
        if keyboard_check(gp_shield[p])
            h_button = 1;//Shield
        else if keyboard_check(gp_charge[p])
            h_button = 2;//Charge
        else
            h_button = 0;
    }
    
    //Data string of hhaaammmmp
    data = (data&lt;&lt;10) + (h_button&lt;&lt;8) + (a_button&lt;&lt;5) + (m_button&lt;&lt;1) + p_button;
    p--;
}

//Send data to next logic block
if instance_exists(director)
    director.data = data;
else
    puppeteer.data = data;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file_delete("controller.ini");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
