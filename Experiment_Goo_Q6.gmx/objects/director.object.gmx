<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>director_set</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOADER

data = 10;
cur = 0;
select_char[1] = 0;
select_char[2] = 0;
select_stage = 0;
cursor_select[1] = instance_find(cursor_select_one,0);
cursor_select[2] = instance_find(cursor_select_two,0);
display_reset(2,false);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>222</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_next_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DIRECTOR

//Player 1 is read first, then shifted out with Player 2 read last
var p = 1;
repeat 2
{
    //Cursor movement
    cursor_select[p].hspeed = 0;
    cursor_select[p].vspeed = 0;
    switch (data&gt;&gt;1) &amp; 15
    {
        case 1: cursor_select[p].hspeed = -4;
                cursor_select[p].vspeed = 4;
                break;
        case 2: cursor_select[p].vspeed = 4;
                break;
        case 3: cursor_select[p].hspeed = 4;
                cursor_select[p].vspeed = 4;
                break;
        case 4: cursor_select[p].hspeed = -4;
                break;
        case 6: cursor_select[p].hspeed = 4;
                break;
        case 7: cursor_select[p].hspeed = -4;
                cursor_select[p].vspeed = -4;
                break;
        case 8: cursor_select[p].vspeed = -4;
                break;
        case 9: cursor_select[p].hspeed = 4;
                cursor_select[p].vspeed = -4;
                break;
        default:cursor_select[p].hspeed = 0;
                cursor_select[p].vspeed = 0;
    }
    
    //Quick start debug using triangle
    if /*(p==1) and*/ (data&gt;&gt;5)&amp;7==3
    {
        select_char[1] = 1;
        select_char[2] = 2;
        select_stage = 1;
        data |= 1;
    }
    
    //Confirm selection
    if data&amp;1 and (select_char[1] or select_char[2]) and select_stage
    {
        select_char[1]--;
        select_char[2]--;
        select_stage--;
        if file_exists("record.txt")
        {
            file_delete("record.txt");
        }
        file = file_text_open_write(working_directory + "record.txt");
        if select_char[1]&gt;=0
        {
            file_text_write_real(file,select_char[1]);
            //data1 = select_char[1];
        }
        else
        {
            file_text_write_real(file,select_char[2]);
            //data1 = select_char[2];
        }
        file_text_writeln(file);
        file_text_write_real(file,select_char[2]);
        //data2 = select_char[2];
        file_text_writeln(file);
        if select_char[1]&gt;=0
            file_text_write_real(file,(1&lt;&lt;9) + (select_stage&lt;&lt;2) + ((select_char[1]==0)&lt;&lt;1) + !(select_char[2]&gt;=0));
        else
            file_text_write_real(file,(1&lt;&lt;9) + (select_stage&lt;&lt;2) + ((select_char[2]==0)&lt;&lt;1) + !(select_char[1]&gt;=0));
        file_text_writeln(file);
        file_text_close(file);
        select_char[1] = -1;
        select_char[2] = -1;
        select_stage = -1;
        alarm[0] = 60;
    }
    
    //Character select
    temp = cur;
    if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_red_one)
        cur = 101;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_blue_one)
        cur = 102;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_yellow_one)
        cur = 103;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_green_one)
        cur = 104;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_purple_one)
        cur = 105;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_cyan_one)
        cur = 106;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, card_white_one)
        cur = 107;
    
    //Stage select
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, green_stg)
        cur = 201;
    else if position_meeting(cursor_select[p].bbox_left, cursor_select[p].bbox_bottom, yellow_stg)
        cur = 202;
    else
        cur = 0;
    
    //Player selection
    data = data&gt;&gt;7;
    if data&amp;1 switch cur
    {
        case 101:   select_char[p] = 1; break;
        case 102:   select_char[p] = 2; break;
        case 103:   select_char[p] = 3; break;
        case 104:   select_char[p] = 4; break;
        case 105:   select_char[p] = 5; break;
        case 106:   select_char[p] = 6; break;
        case 107:   select_char[p] = 7; break;
        case 201:   select_stage = 1; break;
        case 202:   select_stage = 2; break;
        default:    select_char[p] = select_char[p];
                    select_stage = select_stage;
    }
    
    //Go to replay
    data = data&gt;&gt;2;
    if data&amp;1
        room_goto(replay_room);
    
    //Shift to next player
    data = data&gt;&gt;1;
    p++;
}

//Send to display
cur = (cur&lt;&lt;10) + temp;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>500</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring>draw_self();</codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DISPLAY

draw_set_font(HUD_test);
p = 0;
repeat 2
{
    if (cur&amp;1023)==101
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Power",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_red,c_red,c_red,c_red,1);
    else if (cur&amp;1023)==102
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Defense",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_blue,c_blue,c_blue,c_blue,1);
    else if (cur&amp;1023)==103
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Speed",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_yellow,c_yellow,c_yellow,c_yellow,1);
    else if (cur&amp;1023)==104
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Stamina",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_green,c_green,c_green,c_green,1);
    else if (cur&amp;1023)==105
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Variable",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_purple,c_purple,c_purple,c_purple,1);
    else if (cur&amp;1023)==106
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Ultimate",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_aqua,c_aqua,c_aqua,c_aqua,1);
    else if (cur&amp;1023)==107
        draw_text_transformed_color(0.98*p*room_width, room_height/2, "Base",
                                    room_width/view_wview[0], room_height/view_hview[0],
                                    0,c_dkgray,c_dkgray,c_dkgray,c_dkgray,1);
    draw_set_halign(fa_right);
    cur = cur&gt;&gt;10;
    p++;
}
draw_set_halign(fa_left);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
